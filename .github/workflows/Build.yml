name: Build Unsigned iOS .ipa

on:
  workflow_dispatch:  # Allows for manual triggering from GitHub UI

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Checkout the repository with submodules and full history
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      # Debug repository contents
      - name: Debug Repository Contents
        run: |
          ls -R  # List all files to verify the repo structure

      # Install CocoaPods (if applicable)
      - name: Install CocoaPods
        run: |
          pod install --repo-update || echo "No CocoaPods dependencies"  # This ensures pods are installed if required

      # Clean Derived Data to avoid stale builds
      - name: Clean Derived Data
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData  # Clean the derived data folder

      # Clean the build (if needed)
      - name: Clean Build
        run: |
          xcodebuild clean \
            -project "controller-deadzone-main/Controller Deadzone.xcodeproj" \
            -scheme "Controller Deadzone"  # Clean previous builds

      # Archive the project
      - name: Archive Project
        run: |
          xcodebuild -project "controller-deadzone-main/Controller Deadzone.xcodeproj" \
            -scheme "Controller Deadzone" \
            -sdk iphoneos \
            -configuration Release \
            -archivePath $PWD/build/ControllerDeadzone.xcarchive \
            CODE_SIGNING_ALLOWED=NO \
            DEVELOPMENT_TEAM="" archive  # Archive the app with no code signing

      # Debug archive contents
      - name: Debug Archive Contents
        run: |
          ls -R $PWD/build/ControllerDeadzone.xcarchive  # Debug the archive folder contents

      # Create .ipa (export unsigned IPA)
      - name: Export .ipa
        run: |
          rm -rf Payload/
          mkdir -p Payload
          cp -R "$PWD/build/ControllerDeadzone.xcarchive/Products/Applications/Controller Deadzone.app" Payload/
          ls -R Payload/
          zip -r ControllerDeadzone.ipa Payload  # Create the IPA
          mv ControllerDeadzone.ipa $PWD/build/  # Move IPA to build folder

      # Upload the IPA as an artifact
      - name: Upload .ipa
        uses: actions/upload-artifact@v3
        with:
          name: Unsigned-iPA
          path: build/*.ipa  # Upload the generated IPA to GitHub as an artifact
