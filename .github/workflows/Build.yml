name: Build Unsigned iOS .ipa

on:
  workflow_dispatch:  # Triggered manually via GitHub UI

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Checkout the repository with all files and submodules
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0  # Ensure the full history is fetched

      # Debug repository contents to verify all files are present
      - name: Debug Repository Contents
        run: |
          echo "Repository Contents:"
          ls -R  # List all files and folders to confirm structure

      # Install CocoaPods if the project includes a Podfile
      - name: Install CocoaPods (if applicable)
        run: |
          if [ -f "Podfile" ]; then
            pod install --repo-update || echo "No CocoaPods dependencies"
          fi

      # Clean Derived Data to avoid stale builds
      - name: Clean Derived Data
        run: |
          echo "Cleaning Derived Data..."
          rm -rf ~/Library/Developer/Xcode/DerivedData

      # Clean the project
      - name: Clean Project Build
        run: |
          echo "Cleaning the project..."
          xcodebuild clean \
            -project "controller-deadzone-main/Controller Deadzone.xcodeproj" \
            -scheme "Controller Deadzone"

      # Archive the project with all files
      - name: Archive Project
        run: |
          echo "Archiving the project..."
          xcodebuild -project "controller-deadzone-main/Controller Deadzone.xcodeproj" \
            -scheme "Controller Deadzone" \
            -sdk iphoneos \
            -configuration Release \
            -archivePath $PWD/build/ControllerDeadzone.xcarchive \
            CODE_SIGNING_ALLOWED=NO \
            DEVELOPMENT_TEAM="" \
            PROVISIONING_PROFILE_SPECIFIER="" archive

      # Debug archive contents
      - name: Debug Archive Contents
        run: |
          echo "Archive Contents:"
          ls -R $PWD/build/ControllerDeadzone.xcarchive

      # Package the app into an IPA
      - name: Create .ipa File
        run: |
          echo "Creating IPA..."
          rm -rf Payload/
          mkdir -p Payload
          cp -R "$PWD/build/ControllerDeadzone.xcarchive/Products/Applications/Controller Deadzone.app" Payload/
          zip -r ControllerDeadzone.ipa Payload
          mv ControllerDeadzone.ipa $PWD/build/

      # Upload the unsigned IPA as an artifact
      - name: Upload Unsigned IPA
        uses: actions/upload-artifact@v3
        with:
          name: Unsigned-iPA
          path: build/*.ipa
